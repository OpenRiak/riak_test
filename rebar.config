%% -*- mode: erlang; erlang-indent-level: 4; indent-tabs-mode: nil -*-
%% ------------------------------------------------------------------
%%
%% Copyright (c) 2012-2016 Basho Technologies, Inc.
%% Copyright (c) 2017-2023 Workday, Inc.
%%
%% This file is provided to you under the Apache License,
%% Version 2.0 (the "License"); you may not use this file
%% except in compliance with the License.  You may obtain
%% a copy of the License at
%%
%%   http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing,
%% software distributed under the License is distributed on an
%% "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
%% KIND, either express or implied.  See the License for the
%% specific language governing permissions and limitations
%% under the License.
%%
%% ------------------------------------------------------------------
%%
%% Builds a portable riak_test escript that can be packaged along with
%% supporting non-compiled files for use outside the repo.
%%
%% This is accomplished by building the tests/ modules into the escript
%% produced by the
%%  rebar3 as prod compile
%% command.
%%
%% The supported installation layout is:
%%  inst-dir/
%%      riak_test       # required
%%      intercepts/     # required
%%      priv/certs/     # required
%%      groups/         # optional
%%      group.sh        # optional *
%%      groups.sh       # optional *
%%
%% *  Current group scripts do not work as-is outside the repo in which
%%    riak_test was built due to their dependence on the rebar3 _build tree.
%%    This is not addressed because ongoing development supports the riak_test
%%    escript processing enhanced group files directly, obsoleting the present
%%    groups scripts model.
%%

%% Despite having a nominal OTP-24+ target, it *may* be necessary to build with
%% a lesser version to support lager in previous Riak versions.
%% See src/rt_remote_lager.erl for why you might need to do that.
{minimum_otp_vsn, "22"}.

{cover_enabled, true}.

{erl_opts, [
    %% I'd rather be able to define an "off" switch when running edoc, which
    %% doesn't understand covariant specs and will only use the first one,
    %% but there doesn't seem to be any way to do that, so we're left with
    %% defining a macro affirming otherwise default behavior.
    %% EDoc will compile the files with this macro to ensure success, but will
    %% process only the sources for generation, and this won't be defined then.
    {d, 'COVARIANT_SPECS'},
    %% Similarly, hide things we just don't want EDoc to document ...
    {d, 'HIDE_FROM_EDOC'},

    debug_info,     %% keep on for stacktraces inside riak_test
    inline,         %% lots of small pass-through functions for clarity
    warnings_as_errors
]}.

{erl_first_files, [
    "src/rtt.erl",              %% types
    "src/rt_harness.erl",       %% behavior
    "src/rt_logger.erl",        %% behavior
    "src/rt_intercept_pt.erl",  %% parse-transform
    "src/riak_test.erl"         %% tests/* behavior
]}.

{deps, [
    {getopt,
        {git, "https://github.com/OpenRiak/getopt.git",
            {branch, "openriak-3.2"}}},
    {mapred_verify,
        {git, "https://github.com/OpenRiak/mapred_verify.git",
            {branch, "wday-develop-3.2"}}},
    {kvc,
        {git, "https://github.com/etrepum/kvc.git",
            {tag, "v1.7.0"}}},
    {redbug,
        {git, "https://github.com/massemanet/redbug.git", {branch, "master"}}}, 
    {rhc,
        {git, "https://github.com/OpenRiak/riak-erlang-http-client.git",
            {branch, "nhse-o34-leveled.i433-enhancequery"}}},
    {kv_index_tictactree,
        {git, "https://github.com/OpenRiak/kv_index_tictactree.git",
            {branch, "openriak-3.4"}}}
]}.

%% If the standalone riak_test escript can't run a test due to an undefined
%% reference, ensure that the package containing it is in this list.
{escript_incl_apps, [
    getopt,
    ibrowse,
    kv_index_tictactree,
    kvc,
    mochiweb,
    riakc,
    rhc
]}.

{escript_name, riak_test}.
{escript_emu_args,
    "%%! -escript main riak_test_escript +C multi_time_warp\n"}.

{post_hooks, [
    {escriptize,
        "/bin/ln -f \"$REBAR_BUILD_DIR/bin/riak_test\" ./riak_test"}
]}.

{profiles, [
    %% Use 'prod' to produce the 'riak_test' escript used in build plans
    {prod, [
        {erl_opts, [
            {d, 'PROD'},
            {src_dirs, [
                %% Include the tests in the escript.
                src,
                tests
            ]}
        ]},
        {provider_hooks, [
            {post, [
                {compile, escriptize}
            ]}
        ]}
    ]},

    %% Automatic profile for 'edoc'
    {docs, [
        {edoc_opts, [
            {preprocess, true},
            {report_missing_types, true},
            {source_path, [
                %% Someday it'd be nice to include intercepts and even tests,
                %% but not until we can get through the core sources cleanly.
                src
            ]},
            {todo, true}
        ]}
    ]},

    %% Automatic profile for 'eunit' and 'ct'
    {test, [
        {deps, [
            {meck,
                {git, "https://github.com/OpenRiak/meck.git",
                    {branch, "openriak-3.2"}}}
        ]},
        {erl_opts, [
            %% Automatically defines 'TEST'
            {src_dirs, [
                %% Do NOT include the 'tests' directory, as test modules
                %% contain a LOT of non-eunit functions named *_test.
                src
            ]}
        ]},
        {eunit_opts, [
            %% Turning 'verbose' on adds a lot of noise. Normally, we're only
            %% interested in failures ... at least until they're fixed.
            % verbose
        ]}
    ]},

    %% Use 'check' for 'xref', 'dialyzer', or full compilation checks
    {check, [
        {deps, [
            %% xref/dialyzer see into eunit tests, so include meck here, too.
            {meck,
                {git, "https://github.com/OpenRiak/meck.git",
                    {branch, "openriak-3.2"}}},
            {riak_kv,
                {git, "https://github.com/OpenRiak/riak_kv.git",
                    {branch, "nhse-o34-leveled.i433-enhancequery"}}},
            {riak_repl,
                {git, "https://github.com/OpenRiak/riak_repl.git",
                    {branch, "openriak-3.4"}}}
        ]},
        {erl_opts, [
            {d, 'CHECK'},
            {src_dirs, [
                %% Only uncomment 'intercepts' for full compilation check.
                %% Filter out "_orig" if running xref on intercepts.
                % intercepts,
                src,
                tests
            ]}
        ]}
    ]}
]}.

%% Apps whose functions are referenced by tests, used by rebar.config.script
%% to generate:
%%  - {xref_extra_paths, [...]}
%%  - {dialyzer, [{plt_extra_apps, [...]}, ...]}
%%
%% This list is not definitive, as paths to Rebar beams can't be easily
%% produced, so Rebar modules go in {xref_ignores, [...]} below.
%%
%% Adjust what repos' modules are referenced as tests are cleaned up - there's
%% a LOT of old and inoperable cruft in there.
{riak_external_apps, [
    eleveldb,
    exometer_core,
    redbug,
    riak_core,
    riak_dt,
    riak_ensemble,
    riak_kv,
    riak_pipe,
    riak_repl
]}.

{xref_checks, [
    %% Several calls to deprecated module gen_fsm should be cleaned up
    % deprecated_function_calls,

    deprecated_functions,

    %% Lots of exports aren't visibly used (harnesses, for example)
    %% - only enable if you're looking for something specific
    % exports_not_used,

    %% Lots of unused local functions in `rt', enable to work on cleanup
    % locals_not_used,

    undefined_function_calls,
    undefined_functions
]}.

{xref_ignores, [
    %% No longer in Riak, called from out-of-date and largely unusable
    %% replication2_pg test module.
    riak_repl_pb_api,

    %% Exists, but only seen if intercepts are included in xref, which is no
    %% fun. Outside intercepts, only called from replication2_pg test module.
    riak_repl2_leader_intercepts,

    %% Deprecated modules, we don't need warnings from xref.
    rt_local, rt_observer,

    %% We have lots of gen_fsm - turn off the (redundant) warnings whether
    %% deprecated_function_calls is enabled or not.
    gen_fsm
]}.
