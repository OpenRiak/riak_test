%% -*- mode: erlang; erlang-indent-level: 4; indent-tabs-mode: nil -*-
%% ------------------------------------------------------------------
%%
%% Copyright (c) 2012-2016 Basho Technologies, Inc.
%% Copyright (c) 2017-2023 Workday, Inc.
%%
%% This file is provided to you under the Apache License,
%% Version 2.0 (the "License"); you may not use this file
%% except in compliance with the License.  You may obtain
%% a copy of the License at
%%
%%   http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing,
%% software distributed under the License is distributed on an
%% "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
%% KIND, either express or implied.  See the License for the
%% specific language governing permissions and limitations
%% under the License.
%%
%% ------------------------------------------------------------------
%%

{minimum_otp_vsn, "22"}.

{cover_enabled, true}.

{erl_opts, [
    debug_info,     %% keep on for stacktraces inside riak_test
    inline,         %% lots of small pass-through functions for clarity
    {parse_transform, lager_transform},
    warnings_as_errors
]}.

{erl_first_files, [
    "src/rt_intercept_pt.erl"   %% parse-transform
]}.

{deps, [
    {lager,
        {git, "https://github.com/nhs-riak/lager.git",
            {branch, "wday-develop-3.0"}}},
    {getopt,
        {git, "https://github.com/nhs-riak/getopt.git",
            {branch, "wday-develop-3.0"}}},
    {mapred_verify,
        {git, "https://github.com/nhs-riak/mapred_verify.git",
            {branch, "wday-develop-3.0"}}},
    {riakhttpc,
        {git, "https://github.com/nhs-riak/riak-erlang-http-client.git",
            {branch, "wday-develop-3.0"}}},
    {kvc,
        {git, "https://github.com/nhs-riak/kvc.git",
            {branch, "wday-develop-3.0"}}},
    {kv_index_tictactree,
        {git, "https://github.com/nhs-riak/kv_index_tictactree.git",
            {branch, "wday-develop-3.0"}}}
]}.

%% If the standalone riak_test escript can't run a test due to an undefined
%% reference, ensure that the package containing it is in this list.
{escript_incl_apps, [
    getopt,
    goldrush,
    ibrowse,
    kv_index_tictactree,
    kvc,
    lager,
    mochiweb,
    riakc,
    riakhttpc
]}.

{escript_name, riak_test}.
{escript_emu_args,
    "%%! -escript main riak_test_escript +C multi_time_warp\n"}.

{provider_hooks, [
    {post, [
        {compile, escriptize}
    ]}
]}.

{post_hooks, [
    {escriptize,
        "/bin/ln -f \"$REBAR_BUILD_DIR/bin/riak_test\" ./riak_test"}
]}.

{profiles, [
    %% Use 'prod' to produce the 'riak_test' escript used in build plans
    {prod, [
        {erl_opts, [
            {src_dirs, [
                %% Include the tests in the escript.
                src,
                tests
            ]}
        ]},
        {provider_hooks, [
            {post, [
                {compile, escriptize}
            ]}
        ]}
    ]},

    %% Automatic profile for 'edoc'
    {docs, [
        {edoc_opts, [
            {preprocess, true},
            {report_missing_types, true},
            {source_path, [
                %% Someday it'd be nice to include intercepts and even tests,
                %% but not until we can get through the core sources cleanly.
                src
            ]},
            {todo, true}
        ]}
    ]},

    %% Automatic profile for 'eunit' and 'ct'
    {test, [
        {deps, [
            {meck,
                {git, "https://github.com/nhs-riak/meck.git",
                    {branch, "wday-develop-3.0"}}}
        ]},
        {erl_opts, [
            {src_dirs, [
                %% Including the 'tests' directory adds a lot of noise for
                %% little value, at present.
                % tests,
                src
            ]}
        ]},
        {eunit_opts, [
            verbose
        ]}
    ]},

    %% Use 'check' for 'xref', 'dialyzer', or full compilation checks
    {check, [
        {erl_opts, [
            {src_dirs, [
                %% Only uncomment 'intercepts' for full compilation check.
                %% Filter out "_orig" if running xref on intercepts.
                % intercepts,
                src,
                tests
            ]}
        ]}
    ]}
]}.

%% Apps whose functions are referenced by tests, used by rebar.config.script
%% to generate:
%%  - {xref_extra_paths, [...]}
%%  - maybe something for dialyzer in the future
%% This list is not definitive, as paths to Rebar beams can't be easily
%% produced, so Rebar modules go in {xref_ignores, [...]} above.
%% Adjust what repos' modules are referenced as tests are cleaned up - there's
%% a LOT of old and inoperable cruft in there.
{riak_external_apps, [
    eleveldb,
    exometer_core,
    redbug,
    riak_core,
    riak_dt,
    riak_ensemble,
    riak_kv,
    riak_pipe,
    riak_repl
]}.

{xref_checks, [
    %% Several calls to deprecated module gen_fsm should be cleaned up
    % deprecated_function_calls,

    deprecated_functions,

    %% Lots of exports aren't visibly used (harnesses, for example)
    %% - only enable if you're looking for something specific
    % exports_not_used,

    %% Lots of unused local functions in `rt', enable to work on cleanup
    % locals_not_used,

    undefined_function_calls,
    undefined_functions
]}.

{xref_ignores, [
    %% The (useless) Rebar2 plugin makes calls into several modules that are
    %% only visible at runtime inside rebar.
    eqc, rebar_config, rebar_erlc_compiler, rebar_file_utils, rebar_utils,

    %% No longer in Riak, called from out-of-date and largely unusable
    %% replication2_pg test module.
    riak_repl_pb_api,

    %% Exists, but only seen if intercepts are included in xref, which is no
    %% fun. Outside intercepts, only called from replication2_pg test module.
    riak_repl2_leader_intercepts,

    %% We have lots of gen_fsm - turn off the (redundant) warnings whether
    %% deprecated_function_calls is enabled or not.
    gen_fsm
]}.
